{"version":3,"sources":["Login.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["Login","Container","className","style","minHeight","href","spotifyApi","SpotifyWebApi","clientId","Dashboard","accessToken","code","useState","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","useEffect","axios","post","then","res","data","window","history","pushState","catch","location","interval","setInterval","clearInterval","useAuth","search","setSearch","setSearchResults","searchTracks","Form","Control","type","placeholder","value","onChange","e","target","URLSearchParams","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAKe,SAASA,IACpB,OACA,cAACC,EAAA,EAAD,CACIC,UAAU,mDACVC,MAAO,CAACC,UAAW,SAFvB,SAII,mBAAGF,UAAU,yBAAyBG,KAR7B,qXAQT,kC,gDCNDC,EAAa,I,OAAIC,GAAc,CACjCC,SAAU,qCAGC,SAASC,EAAT,GAA4B,IACjCC,ECPI,SAAiBC,GAC9B,MAAsCC,qBAAtC,mBAAOF,EAAP,KAAoBG,EAApB,KACA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAkCH,qBAAlC,mBAAOI,EAAP,KAAkBC,EAAlB,KAqCA,OAnCAC,qBAAU,WACRC,IACGC,KAAK,8BAA+B,CACnCT,SAEDU,MAAK,SAAAC,GACJT,EAAeS,EAAIC,KAAKb,aACxBK,EAAgBO,EAAIC,KAAKT,cACzBG,EAAaK,EAAIC,KAAKP,WACtBQ,OAAOC,QAAQC,UAAU,GAAI,KAAM,QAEpCC,OAAM,WACLH,OAAOI,SAAW,SAErB,CAACjB,IAEJO,qBAAU,WACR,GAAKJ,GAAiBE,EAAtB,CACA,IAAMa,EAAWC,aAAY,WAC3BX,IACGC,KAAK,gCAAiC,CACrCN,iBAEDO,MAAK,SAAAC,GACJT,EAAeS,EAAIC,KAAKb,aACxBO,EAAaK,EAAIC,KAAKP,cAEvBW,OAAM,WACLH,OAAOI,SAAW,SAEF,KAAlBZ,EAAY,KAEhB,OAAO,kBAAMe,cAAcF,OAC1B,CAACf,EAAcE,IAEXN,EDjCgBsB,CADkB,EAAPrB,MAE/B,EAA4BC,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KACA,EAA0CtB,mBAAS,IAAnD,mBAAsBuB,GAAtB,WAgBA,OAdAjB,qBAAU,WACDR,GACNJ,EAAWO,eAAeH,KAC1B,CAACA,IAEJQ,qBAAU,WACP,IAAKe,EAAQ,OAAOE,EAAiB,IAChCzB,GAELJ,EAAW8B,aAAaH,GAAQZ,MAAK,SAAAC,SAGrC,CAACW,EAAQvB,IAEL,cAACT,EAAA,EAAD,UACH,cAACoC,EAAA,EAAKC,QAAN,CAAcC,KAAK,SAASC,YAAY,2BAA2BC,MAAOR,EAAQS,SAAU,SAAAC,GAAC,OAAIT,EAAUS,EAAEC,OAAOH,YE1B7H,IAAM9B,EAAO,IAAIkC,gBAAgBrB,OAAOI,SAASK,QAAQa,IAAI,QAM9CC,MAJf,WACE,OAAOpC,EAAO,cAACF,EAAD,CAAWE,KAAMA,IAAU,cAACX,EAAD,KCF3CgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.04e8a748.chunk.js","sourcesContent":["import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nconst Auth_URL = \"https://accounts.spotify.com/authorize?client_id=eba98dc6511f48a080c04e21836548b5&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-read-playback-state%20user-modify-playback-state%20playlist-modify-public%20playlist-modify-private%20playlist-read-private&20playlist-read-collaborative\"\n\nexport default function Login() {\n    return( \n    <Container \n        className=\"d-flex justify-content-center align-items-center\" \n        style={{minHeight: \"100vh\"}}\n    >\n        <a className=\"btn btn-success btn-lg\" href={Auth_URL}>Login With Spotify</a>\n    </Container>\n    )\n}"," import { useState, useEffect } from \"react\"\n import useAuth from './useAuth'\n import { Container, Form } from \"react-bootstrap\"\n import SpotifyWebApi from \"spotify-web-api-node\"\n\n const spotifyApi = new SpotifyWebApi({\n     clientId: 'eba98dc6511f48a080c04e21836548b5',\n })\n\n export default function Dashboard({code}) {\n     const accessToken = useAuth(code)\n     const [search, setSearch] = useState(\"\")\n     const [searchResults, setSearchResults] = useState([])\n\n     useEffect(() => {\n         if (!accessToken) return\n        spotifyApi.setAccessToken(accessToken)\n     }, [accessToken])\n\n     useEffect(() => {\n        if (!search) return setSearchResults([])\n        if (!accessToken) return\n\n        spotifyApi.searchTracks(search).then(res =>  {\n\n        })\n     }, [search, accessToken])\n\n     return <Container>\n         <Form.Control type=\"search\" placeholder=\"Search for Artists/Songs\" value={search} onChange={e => setSearch(e.target.value)} />\n     </Container>\n }\n","import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nexport default function useAuth(code) {\n  const [accessToken, setAccessToken] = useState()\n  const [refreshToken, setRefreshToken] = useState()\n  const [expiresIn, setExpiresIn] = useState()\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:3001/login\", {\n        code,\n      })\n      .then(res => {\n        setAccessToken(res.data.accessToken)\n        setRefreshToken(res.data.refreshToken)\n        setExpiresIn(res.data.expiresIn)\n        window.history.pushState({}, null, \"/\")\n      })\n      .catch(() => {\n        window.location = \"/\"\n      })\n  }, [code])\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return\n    const interval = setInterval(() => {\n      axios\n        .post(\"http://localhost:3001/refresh\", {\n          refreshToken,\n        })\n        .then(res => {\n          setAccessToken(res.data.accessToken)\n          setExpiresIn(res.data.expiresIn)\n        })\n        .catch(() => {\n          window.location = \"/\"\n        })\n    }, (expiresIn - 60) * 1000)\n\n    return () => clearInterval(interval)\n  }, [refreshToken, expiresIn])\n\n  return accessToken\n}","import 'bootstrap/dist/css/bootstrap.min.css'\nimport Login from './Login'\nimport Dashboard from './Dashboard'\nconst code = new URLSearchParams(window.location.search).get('code')\n\nfunction App() {\n  return code ? <Dashboard code={code} /> :<Login />\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}